/*
 * *****************************************************
 *  Copyright VMware, Inc. 2014.   All Rights Reserved.
 * *****************************************************
 */
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

version = '1.0.0'
project.description = 'Fault Generator'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:1.0.3"
    }
}

repositories {
        mavenLocal()
        mavenCentral()
    }
    
ext {
    libraries = [:]
}

libraries.required = [

    "org.apache.commons:commons-lang3:3.3.2",
    "org.quartz-scheduler:quartz:2.2.1",
	"org.quartz-scheduler:quartz-jobs:2.2.1",
    "javax.transaction:jta:1.1"
]

libraries.logging = [
    'org.slf4j:slf4j-api:1.7.7',
    'log4j:log4j:1.2.17',
     'org.slf4j:slf4j-log4j12:1.7.7'  
]

dependencies {
    compile libraries.required,
            libraries.logging

}

def mainClass = 'com.vmware.vchs.faultGeneratorTesting.FaultGeneratorTest'
if( project.hasProperty( 'main' ) ) {
    mainClass = project.main
}

run {
    mainClassName = mainClass
}

subprojects {
    tasks.withType( JavaCompile ) {
        if( hasProperty( "xlint" ) ) {
            options.compilerArgs << "-Xlint:unchecked"
        }
    }
}

shadowJar {
    baseName = project.name + '-all'
    classifier = ''
    version = "1.0.0"
    mergeServiceFiles()
}

jar {
    baseName = project.name
    version = "1.0.0"
    manifest {
        attributes( 'Main-Class': mainClass )
    }
}

task tarDistribution( type: Tar ) {
    archiveName = 'faultGenerator.tar'
    destinationDir = project.distsDir
    includeEmptyDirs = false
    from( project.file( 'install' ) ) {
        include 'bin/**'
        include 'config/**'
        include 'scripts/**'
        include 'libs/**'
        exclude 'lib/**'
        exclude 'logs/**'
    }
    into( 'lib' ) {
        from( project.file( 'build/libs' ) ) {
            include '*-all-*.jar'
        }
    }
}

artifacts {
    archives jar
    archives shadowJar
    archives tarDistribution
}

